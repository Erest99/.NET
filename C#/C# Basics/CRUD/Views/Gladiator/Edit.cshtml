@model CRUD.Models.GladiatorModel

@{
    ViewData["Title"] = "Edit";
}
@if (TempData["AlertMessage"] != null)
{
    <div class="alert alert-success">
        <strong>@TempData["AlertMessage"]</strong>
    </div>
}
<div class="remSP" id="spdiv">
</div>

<h1>Edit</h1>

<h4>GladiatorModel</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="id" />
            <div class="form-group">
                <label asp-for="name" class="control-label"></label>
                <input asp-for="name" class="form-control" />
                <span asp-validation-for="name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="weapon" class="control-label"></label>
                <input asp-for="weapon" class="form-control" />
                <span asp-validation-for="weapon" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="attack" class="control-label"></label>
                <input asp-for="attack" class="form-control" />
                <span asp-validation-for="attack" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="maxhealth" class="control-label"></label>
                <input asp-for="maxhealth" class="form-control" />
                <span asp-validation-for="maxhealth" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="speed" class="control-label"></label>
                <input asp-for="speed" class="form-control" />
                <span asp-validation-for="speed" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="defence" class="control-label"></label>
                <input asp-for="defence" class="form-control" />
                <span asp-validation-for="defence" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="hasShield" /> @Html.DisplayNameFor(model => model.hasShield)
                </label>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

<script>
    // Get references to the input fields and the result div
    var attack_input = document.getElementById("attack");
    var health_input = document.getElementById("maxhealth");
    var speed_input = document.getElementById("speed");
    var defence_input = document.getElementById("defence");
    var resultDiv = document.getElementById("spdiv");
    var maxSP = @Model.level + 9;

    // Function to calculate and update the sum
    function calculateSP() {
        var value1 = parseFloat(attack_input.value) || 0; // Convert input value to a number, default to 0 if not a valid number
        var value2 = parseFloat(health_input.value / 3) || 0;
        var value3 = parseFloat(speed_input.value) || 0;
        var value4 = parseFloat(defence_input.value) || 0;
        var sum = value1 + value2 + value3 + value4;
        var result = maxSP - sum;

        resultDiv.textContent = "Remaining skillpoints: " + result;
    }

    // Add event listeners to recalculate the sum when input values change
    attack_input.addEventListener("input", calculateSP);
    health_input.addEventListener("input", calculateSP);
    speed_input.addEventListener("input", calculateSP);
    defence_input.addEventListener("input", calculateSP);

    // Initial calculation
    calculateSP();
</script>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
